# Generated by Django 4.1.1 on 2022-10-19 12:16

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Utilisateurs',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contact', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utliisateur',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Categorie',
            },
        ),
        migrations.CreateModel(
            name='Commandes',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('livree', models.BooleanField()),
                ('lieu_livraison', models.CharField(default='', max_length=34)),
            ],
            options={
                'verbose_name': 'Commande',
            },
        ),
        migrations.CreateModel(
            name='Favoris',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Favori',
            },
        ),
        migrations.CreateModel(
            name='Livraison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('localisation', models.CharField(max_length=50)),
                ('date', models.DateField(default=datetime.date(2022, 10, 19))),
                ('livre', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Marque',
            },
        ),
        migrations.CreateModel(
            name='SousCategorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.categorie')),
            ],
            options={
                'verbose_name': 'Sous-Categorie',
            },
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image1', models.ImageField(null=True, upload_to='')),
                ('image2', models.ImageField(null=True, upload_to='')),
                ('image3', models.ImageField(null=True, upload_to='')),
                ('nom', models.CharField(max_length=100)),
                ('date_de_stock', models.DateField(default=datetime.datetime(2022, 10, 19, 13, 16, 7, 831441))),
                ('stock', models.PositiveIntegerField()),
                ('description_courte', models.TextField(max_length=500, null=True)),
                ('description_longue', models.TextField(max_length=500, null=True)),
                ('prix', models.PositiveIntegerField()),
                ('brand', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='home.mark')),
                ('categorie', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.categorie')),
                ('favoris', models.ManyToManyField(to='home.favoris')),
                ('sous_categorie', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='home.souscategorie')),
            ],
            options={
                'verbose_name': 'Produit',
            },
        ),
        migrations.CreateModel(
            name='Panier',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Panier',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.ImageField(upload_to='')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.produit')),
            ],
            options={
                'verbose_name': 'Photo de produit',
            },
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('date_livraison', models.DateField()),
                ('prix_total', models.PositiveIntegerField()),
                ('commande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.commandes')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Facture',
            },
        ),
        migrations.AddField(
            model_name='commandes',
            name='livraison',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='home.livraison'),
        ),
        migrations.AddField(
            model_name='commandes',
            name='utilisateur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Avis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.CharField(max_length=500)),
                ('date', models.DateField()),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.produit')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Avis',
            },
        ),
    ]
